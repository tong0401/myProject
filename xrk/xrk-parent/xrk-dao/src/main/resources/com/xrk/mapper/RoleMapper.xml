<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xrk.dao.RoleMapper">
	<!-- 以下与实体类的中字段一致 -->
	<resultMap id="BaseResultMap" type="com.xrk.entity.Role">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="roleKey" property="roleKey" jdbcType="VARCHAR"/>
		<result column="description" property="description" jdbcType="VARCHAR"/>
		<result column="enable" property="enable" jdbcType="INTEGER"/>
	</resultMap>
	
	<sql id="selectId">
	id,
	enable,
	name,
	roleKey,
	description
	</sql>
	<!--resultMap="BaseResultMap" 每返回一条结果封装到Roles里 -->
	<select id="query" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select
		<include refid="selectId" />
		from xrk_role
		<where>
			<if test="t.name != null and t.name != ''">
				name like '%${t.name}%'
				</if>
		</where>
	</select>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="selectId" />
		from xrk_role
	</select>
	<!-- 总记录数 -->
	<select id="count" parameterType="com.xrk.entity.Role" resultType="int">
		select count(0) from xrk_role
		<where>
			<if test="name != null and name != ''">
				name like '%${name}%'
				</if>
		</where>
	</select>
	<!-- 增加用户 -->
	<insert id="add" parameterType="com.xrk.entity.Role">
		insert into xrk_role( 
		name,
		enable,
		roleKey,
		description
		)
		values (#{name},
		#{enable},#{roleKey},
		#{description}
		)
	</insert>

	<delete id="deleteById" parameterType="int">
		delete from xrk_role where
		id=#{id}
	</delete>
	<select id="getById" parameterType="int" resultMap="BaseResultMap">
		select
		<include refid="selectId" />
		from xrk_role where id=#{id}
	</select>
	<update id="update" parameterType="com.xrk.entity.Role">
		update xrk_role
		<set>
				name=#{name},
				enable=#{enable},
				roleKey=#{roleKey},
				description=#{description}
		</set>
		where id=#{id}
	</update>
	<select id="findByUserRole" parameterType="int" resultMap="BaseResultMap">
		select
		<include refid="selectId" />
		from xrk_role where id in (SELECT role_id FROM xrk_user_role WHERE user_id=#{id})
	</select>

	<!-- 增加角色和用户 -->
	<insert id="saveUserRole" parameterType="com.xrk.entity.UserRole">
	insert into xrk_user_role(user_id,role_id) values (#{userId},#{roleId})
	</insert>

	<delete id="deleteUserRole" parameterType="int">
	delete from xrk_user_role where user_id=#{userId}
	</delete>

	<update id="updateUserRole" parameterType="int">
	update xrk_user_role set user_id=#{userId}
	</update>
</mapper>