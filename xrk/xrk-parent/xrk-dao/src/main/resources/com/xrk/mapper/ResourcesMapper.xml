<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xrk.dao.ResourcesMapper">
	<!-- 以下与实体类的中字段一致 -->
	<resultMap id="BaseResultMap" type="com.xrk.entity.Resources">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="parentId" property="parentId" jdbcType="INTEGER"/>
		<result column="resKey" property="resKey" jdbcType="VARCHAR"/>
		<result column="type" property="type" jdbcType="VARCHAR"/>
		<result column="resUrl" property="resUrl" jdbcType="VARCHAR"/>
		<result column="level" property="level" jdbcType="INTEGER"/>
		<result column="description" property="description" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="selectId">
	id,
	name,
	parentId,
	(select r.name from xrk_resources r where r.id = xrk_resources.parentId ) parentName,
	resKey,
	type,
	resUrl,
	level,
	description
	</sql>
	
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="selectId" />
		from xrk_resources order By level asc
	</select>
	<!--resultType="Resources" 每返回一条结果封装到XrkResources里 -->
	<select id="query" resultMap="BaseResultMap" parameterType="com.xrk.entity.Resources">
		select
		<include refid="selectId" />
		from xrk_resources
		<where>
			<if test="t.name != null and t.name != ''">
				name like '%${t.name}%'
				</if>
		</where>
		order By level asc
	</select>
	<!-- 总记录数 -->
	<select id="count" parameterType="com.xrk.entity.Resources" resultType="int">
		select count(0) from xrk_resources
		<where>
			<if test="name != null and name != ''">
				name like '%${name}%'
				</if>
		</where>
	</select>
	<!-- 根据用户Id获取该用户的权限-->
	<select id="getUserResources" parameterType="String" resultMap="BaseResultMap">
		SELECT 
		<include refid="selectId" />
		FROM xrk_resources WHERE id in(
		SELECT resc_id FROM
		xrk_resources_role WHERE role_id in(
		SELECT role_id FROM xrk_user_role
		WHERE user_id=#{id}))
	</select>
	<!-- 根据角色Id获取该角色的权限-->
	<select id="getResourcesByUserName" parameterType="String" resultMap="BaseResultMap">
		SELECT 
		<include refid="selectId" />
		FROM xrk_resources WHERE id in(
		SELECT resc_id FROM
		xrk_resources_role WHERE role_id in(
		SELECT role_id FROM xrk_user_role,xrk_user
		WHERE user_id=userId and username=#{username}))
	</select>
	<!-- 新增 -->
	<insert id="add" parameterType="com.xrk.entity.Resources">
		insert into xrk_resources(
					name,
					parentId,
					resKey,
					type,
					resUrl,
					level,
					description
								) 
		values(
				#{name},
				#{parentId},
				#{resKey},
				#{type},
				#{resUrl},
				#{level},
				#{description}
				)
	</insert>
	
	<!-- 删 -->
	<delete id="deleteById" parameterType="String">
		delete from xrk_resources
		where id=#{id}
	</delete>
	
	<select id="getById" parameterType="String" resultMap="BaseResultMap">
		select * from xrk_resources where id=#{id}
	</select>
	
	<!-- 更新 -->
	<update id="update" parameterType="com.xrk.entity.Resources">
	    update xrk_resources
	    set
	    	name = #{name},
	    	parentId = #{parentId},
			resKey = #{resKey},
			type = #{type},
			resUrl = #{resUrl},
			level = #{level},
			description = #{description}
	   where id = #{id}
	</update>
	
	<!-- 增加角色和权限 -->
	<insert id="saveRoleRescours" parameterType="com.xrk.entity.ResourceRole">
	insert into xrk_resources_role(role_id,resc_id) values (#{roleId},#{rescId})
	</insert>
	<delete id="deleteRoleRescours" parameterType="String">
		delete from xrk_resources_role where role_id=#{roleId}
	</delete>
</mapper>